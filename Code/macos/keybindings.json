// Place your key bindings in this file to override the defaults
[
    {
        "key": "shift+alt+c",
        "command": "workbench.action.terminal.newWithProfile",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
     {
        "key": "ctrl+s",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
     {
        "key": "ctrl+x",
        "command": "-extension.vim_ctrl+x",
        "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
    },
     {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
     {
        "key": "ctrl+[Backslash]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[Semicolon]",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+[Quote]",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
      "key": "ctrl+shift+c",
      "command": "editor.action.clipboardCopyAction",
      "when": "editorTextFocus && vim.mode == 'Visual'"
    },
    {
      "key": "ctrl+c",
      "command": "extension.vim_escape",
      "when": "editorTextFocus && vim.mode == 'Visual'"
    },

    // MACOS
    {
        "key": "shift+cmd+[Backslash]",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+[Backslash]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+7",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+option+c",
        "command": "workbench.action.terminal.newWithProfile",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+s",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+x",
        "command": "-extension.vim_ctrl+x",
        "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
    },
    {
        "key": "cmd+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "cmd+\\",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "cmd+'",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+k cmd+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+k cmd+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+k cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+k cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+shift+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "editorTextFocus && vim.mode == 'Visual'"
    },
    {
        "key": "cmd+c",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.mode == 'Visual'"
    },
    {
        "key": "tab",
        "command": "insertBestCompletion",
        "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "tab",
        "command": "-insertBestCompletion",
        "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "tab",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "tab",
        "command": "-insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
]